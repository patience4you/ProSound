{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_my_header = _resolveComponent(\"my-header\");\n  const _component_my_aside = _resolveComponent(\"my-aside\");\n  const _component_my_content = _resolveComponent(\"my-content\");\n  const _component_my_footer = _resolveComponent(\"my-footer\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_my_header), _createVNode(_component_my_aside), _createVNode(_component_my_content), _createVNode(_component_my_footer)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_my_header","_component_my_aside","_component_my_content","_component_my_footer"],"sources":["D:\\Vue\\sound-app\\src\\App.vue"],"sourcesContent":["<script>\r\n  import MyHeader from \"@/components/MyHeader.vue\";\r\n  import MyContent from \"@/components/MyContent.vue\";\r\n  import MyAside from \"@/components/MyAside.vue\";\r\n  import MyFooter from \"@/components/MyFooter.vue\";\r\n\r\n  export default {\r\n    components: {\r\n      MyHeader, MyAside, MyContent, MyFooter\r\n    }\r\n  }\r\n</script>\r\n\r\n<template>\r\n  <div class=\"container\">\r\n    <my-header/>\r\n    <my-aside/>\r\n    <my-content/>\r\n    <my-footer/>\r\n  </div>\r\n</template>\r\n\r\n<style>\r\n\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  .container {\r\n    height: 100%;\r\n    width: 90%;\r\n    display: grid;\r\n\r\n    grid-template-columns: minmax(400px, 1fr) minmax(300px, 4fr);\r\n    grid-template-rows: minmax(100px, auto) 1fr minmax(125px, auto);\r\n    grid-template-areas:\r\n              'header header'\r\n              'aside content'\r\n              'footer footer';\r\n    grid-gap: 10px;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  @media screen and (min-width: 1000px) {\r\n    .container {\r\n      \r\n      grid-template-columns: minmax(400px, 1fr) minmax(300px, 4fr);\r\n      grid-template-rows: minmax(100px, auto) 1fr minmax(125px, auto);\r\n      grid-template-areas:\r\n              'header header'\r\n              'aside content'\r\n              'footer footer';\r\n    }\r\n  }\r\n\r\n  /* Для мобильных устройств */\r\n  @media screen and (max-width: 1000px) {\r\n    .container {\r\n      width: 100%;\r\n      grid-template-columns: 1fr; /* Одна колонка для мобильных устройств */\r\n      grid-template-rows: minmax(100px, auto) minmax(400px, auto) minmax(500px, auto) minmax(125px, auto); /* Изменяем значения строк */\r\n      grid-template-areas:\r\n              'header'\r\n              'aside'\r\n              'content'\r\n              'footer';\r\n    }\r\n  }\r\n\r\n</style>"],"mappings":";;EAcOA,KAAK,EAAC;AAAW;;;;;;uBAAtBC,mBAAA,CAKM,OALNC,UAKM,GAJJC,YAAA,CAAYC,oBAAA,GACZD,YAAA,CAAWE,mBAAA,GACXF,YAAA,CAAaG,qBAAA,GACbH,YAAA,CAAYI,oBAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}